##日志输出级别，共有5级：
##FATAL      0
##ERROR      3
##WARN       4
##INFO       6
##DEBUG      7
#
#####该配置文件拥有一个父Logger，三个子Logger(thread、timer、socket)
#####配置控制台输出所有子Logger日志，子Logger日志分别输出到不同文件夹中
## log4j.rootLogger = DEBUG,console                                              配置父Logger把指定级别以上的日志信息输出到指定的一个或者多个位置
## log4j.logger.thread=DEBUG,thread                                              配置子Logger(thread)把指定级别以上的日志信息输出到指定的一个或者多个位置
## log4j.addivity                                                                配置子Logger是否能在父Logger的appender里输出，为true则子Logger可以在父Logger里输出，
##                                                                               比如，为true时子Logger(thread)既可以在自己的log文件里面输出，又可以在父Logger的console里面输出，
##                                                                               为false则不行。默认为true
## log4j.appender.stdout = org.apache.log4j.ConsoleAppender                      配置控制台输出
## log4j.appender.console.encoding=UTF-8                                         设置输出文件格式
## log4j.appender.stdout = org.apache.log4j.DailyRollingFileAppender             配置每天一个日志文件输出
## log4j.appender.stdout.Threshold = DEBUG                                       输出WARN级别以上的日志信息
## log4j.appender.stdout.layout = org.apache.log4j.PatternLayout                 灵活的指定布局模式
## log4j.appender.D.File = C:\\Users\\xs\\Desktop\\log4j.log                     日志输出位置
## log4j.appender.D.Append = true                                                true表示新消息将增加到指定文件中，false则将消息覆盖指定的文件内容，默认值是true
## log4j.appender.file.MaxFileSize=5MB                                           设置文件的最大大小，在日志文件到达该大小时，将自动滚动
## log4j.appender.file.MaxBackupIndex=10                                         设置可滚动文件的文件个数
## log4j.appender.stdout.layout.ConversionPattern = [%-5p] %d{yyyy-MM-dd HH:mm:ss,SSS} method:%l %-7t: %m%n
##                                                = #%-d{yyyy-MM-dd HH:mm:ss}  [ %t:%r ] - [ %p ]  %m%n
##                                                                               设置信息输出的格式
#log4j.rootLogger=DEBUG,console
#log4j.addivity.org.apache=true
#
##配置控制台
#log4j.appender.console=org.apache.log4j.ConsoleAppender
#log4j.appender.console.encoding=UTF-8
#log4j.appender.console.Threshold=DEBUG
#log4j.appender.console.layout=org.apache.log4j.PatternLayout
#log4j.appender.console.layout.ConversionPattern=[%-5p] %d{yyyy-MM-dd HH:mm:ss,SSS} %-6t: %m%n
#
##配置thread输出的日志
#log4j.logger.thread=DEBUG,thread
#log4j.appender.thread=org.apache.log4j.DailyRollingFileAppender
#log4j.appender.thread.File=D:/1.log
#log4j.appender.thread.file.MaxBackupIndex=10
#log4j.appender.thread.file.MaxFileSize=5MB
#log4j.appender.thread.Append=true
#log4j.appender.thread.layout=org.apache.log4j.PatternLayout
#log4j.appender.thread.layout.ConversionPattern=[%-5p] %d{yyyy-MM-dd HH:mm:ss,SSS} method:%l %-7t: %m%n
#log4j.additivity.thread=true
#
##配置timer输出的日志
#log4j.logger.timer=DEBUG,timer
#log4j.appender.timer=org.apache.log4j.DailyRollingFileAppender
#log4j.appender.timer.File=D:/2.log
#log4j.appender.timer.file.MaxBackupIndex=10
#log4j.appender.timer.file.MaxFileSize=5MB
#log4j.appender.timer.Append=true
#log4j.appender.timer.layout=org.apache.log4j.PatternLayout
#log4j.appender.timer.layout.ConversionPattern=[%-5p] %d{yyyy-MM-dd HH:mm:ss,SSS} method:%l %-7t: %m%n
#log4j.additivity.timer=true
#
##配置socket输出的日志
#log4j.logger.socket=DEBUG,socket
#log4j.appender.socket=org.apache.log4j.DailyRollingFileAppender
#log4j.appender.socket.File=D:/3.log
#log4j.appender.socket.file.MaxBackupIndex=10
#log4j.appender.socket.file.MaxFileSize=5MB
#log4j.appender.socket.Append=true
#log4j.appender.socket.layout=org.apache.log4j.PatternLayout
#log4j.appender.socket.layout.ConversionPattern=[%-5p] %d{yyyy-MM-dd HH:mm:ss,SSS} method:%l %-7t: %m%n
#log4j.additivity.socket=true